buildscript {
    ext.kotlinVersion = '1.3.11'
    ext.springBootVersion = '2.0.0.RELEASE'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-allopen"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext.coroutinesVersion = '1.1.0'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile group: 'org.springframework.plugin', name: 'spring-plugin-core'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: "${coroutinesVersion}"
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-slf4j', version: "${coroutinesVersion}"
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: "${coroutinesVersion}"
    compile project(":base-domain")
    compile project(":employ-box-domain")
    compile project(":employ-box-business-client")
    compile project(":base-exception")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
    annotation("com.fasterxml.jackson.annotation.JsonIgnoreProperties")
} 

