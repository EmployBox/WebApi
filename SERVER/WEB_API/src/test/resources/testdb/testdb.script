SET DATABASE UNIQUE NAME HSQLDB6368C38052
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.ACCOUNT(ACCOUNTID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,EMAIL VARCHAR(25) NOT NULL,RATING DOUBLE DEFAULT 0.0,PASSWORD VARCHAR(100) NOT NULL,ACCOUNTTYPE VARCHAR(3) NOT NULL,VERSION BIGINT DEFAULT 1,UNIQUE(EMAIL),CHECK((PUBLIC.ACCOUNT.RATING>=0.0) AND (PUBLIC.ACCOUNT.RATING<=10.0)),CHECK((PUBLIC.ACCOUNT.ACCOUNTTYPE) IN (('USR'),('CMP'),('MOD'))))
ALTER TABLE PUBLIC.ACCOUNT ALTER COLUMN ACCOUNTID RESTART WITH 0
CREATE MEMORY TABLE PUBLIC.USERACCOUNT(ACCOUNTID BIGINT PRIMARY KEY,SUMMARY VARCHAR(1500),PHOTOURL VARCHAR(100),VERSION BIGINT DEFAULT 1,FOREIGN KEY(ACCOUNTID) REFERENCES PUBLIC.ACCOUNT(ACCOUNTID))
CREATE MEMORY TABLE PUBLIC.CURRICULUM(ACCOUNTID BIGINT,CURRICULUMID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,TITLE VARCHAR(50),VERSION BIGINT DEFAULT 1,FOREIGN KEY(ACCOUNTID) REFERENCES PUBLIC.USERACCOUNT(ACCOUNTID))
ALTER TABLE PUBLIC.CURRICULUM ALTER COLUMN CURRICULUMID RESTART WITH 0
CREATE MEMORY TABLE PUBLIC.JOB(JOBID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,TITLE VARCHAR(50) NOT NULL,ACCOUNTID BIGINT,SCHEDULE VARCHAR(20),WAGE INTEGER,DESCRIPTION VARCHAR(50),OFFERBEGINDATE TIMESTAMP DEFAULT CURRENT_DATE,OFFERENDDATE TIMESTAMP,OFFERTYPE VARCHAR(30) NOT NULL,ADDRESS VARCHAR(50),VERSION BIGINT DEFAULT 1,CHECK(PUBLIC.JOB.WAGE>0),FOREIGN KEY(ACCOUNTID) REFERENCES PUBLIC.ACCOUNT(ACCOUNTID),CHECK((PUBLIC.JOB.OFFERTYPE='Looking for work') OR (PUBLIC.JOB.OFFERTYPE='Looking for Worker')))
ALTER TABLE PUBLIC.JOB ALTER COLUMN JOBID RESTART WITH 0
CREATE MEMORY TABLE PUBLIC.SCHEDULE(SCHEDULEID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,JOBID BIGINT,ACCOUNTID BIGINT,SCHEDULETYPE VARCHAR(25),REPEATS VARCHAR(25),STARTDATE TIMESTAMP,ENDDATE TIMESTAMP,STARTHOUR TIMESTAMP,ENDHOUR TIMESTAMP,VERSION BIGINT DEFAULT 1,FOREIGN KEY(JOBID) REFERENCES PUBLIC.JOB(JOBID),FOREIGN KEY(ACCOUNTID) REFERENCES PUBLIC.ACCOUNT(ACCOUNTID))
ALTER TABLE PUBLIC.SCHEDULE ALTER COLUMN SCHEDULEID RESTART WITH 0
SET SCHEMA PUBLIC
CREATE TRIGGER PUBLIC.ACCOUNT_TRIGGER BEFORE UPDATE ON PUBLIC.ACCOUNT REFERENCING OLD ROW AS OLD NEW ROW AS NEW FOR EACH ROW BEGIN ATOMIC BEGIN ATOMIC SET NEW.VERSION=OLD.VERSION+1;END;END
CREATE TRIGGER PUBLIC.USER_TRIGGER BEFORE UPDATE ON PUBLIC.USERACCOUNT REFERENCING OLD ROW AS OLD NEW ROW AS NEW FOR EACH ROW BEGIN ATOMIC BEGIN ATOMIC SET NEW.VERSION=OLD.VERSION+1;END;END
CREATE TRIGGER PUBLIC.CURRICULUM_TRIGGER BEFORE UPDATE ON PUBLIC.CURRICULUM REFERENCING OLD ROW AS OLD NEW ROW AS NEW FOR EACH ROW BEGIN ATOMIC BEGIN ATOMIC SET NEW.VERSION=OLD.VERSION+1;END;END
CREATE TRIGGER PUBLIC.JOB_TRIGGER BEFORE UPDATE ON PUBLIC.JOB REFERENCING OLD ROW AS OLD NEW ROW AS NEW FOR EACH ROW BEGIN ATOMIC BEGIN ATOMIC SET NEW.VERSION=OLD.VERSION+1;END;END
CREATE TRIGGER PUBLIC.SCHEDULE_TRIGGER BEFORE UPDATE ON PUBLIC.SCHEDULE REFERENCING OLD ROW AS OLD NEW ROW AS NEW FOR EACH ROW BEGIN ATOMIC BEGIN ATOMIC SET NEW.VERSION=OLD.VERSION+1;END;END
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
