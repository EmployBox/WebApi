package model;

import util.Streamable;

import java.util.stream.Stream;

public class Chat extends AutoGeneratedIdentity<Long> {
    private long chadId;
    private final long accountIdFirst;
    private final long accountIdSecond;

    private final Streamable<Message> messages;

    private Chat(long chatId, long accountIdFirst, long accountIdSecond, Streamable<Message> messages, long version) {
        super(chatId, version);
        this.chadId = chatId;
        this.accountIdFirst = accountIdFirst;
        this.accountIdSecond = accountIdSecond;
        this.messages = messages;
    }

    public static Chat create(long accountIdFirst, long accountIdSecond, Streamable<Message> messages, long version){
        Chat chat = new Chat(defaultKey, accountIdFirst, accountIdSecond, messages, version);
        chat.markNew();
        return chat;
    }

    public static Chat load(long chatId, long accountIdFirst, long accountIdSecond, Streamable<Message> messages, long version){
        Chat chat = new Chat(chatId, accountIdFirst, accountIdSecond, messages, version);
        chat.markClean();
        return chat;
    }

    public static Chat update(Chat chat, Streamable<Message> messages){
        chat.markToBeDirty();
        Chat newChat = new Chat(chat.getChadId(), chat.getAccountIdFirst(), chat.getAccountIdSecond(), messages, chat.getVersion());
        newChat.markDirty();
        return newChat;
    }

    public long getChadId() {
        return chadId;
    }

    public long getAccountIdFirst() {
        return accountIdFirst;
    }

    public long getAccountIdSecond() {
        return accountIdSecond;
    }

    public Stream<Message> getMessages() {
        return messages.get();
    }

    @Override
    protected void newdentityKey(Long key) {
        identityKey = key;
        chadId = key;
    }
}
